let selected_room = room_list_state.selected().and_then(|index| {
        chat_rooms
            .as_ref()
            .ok()
            .and_then(|rooms| rooms.get(index).cloned())
    });

let room_detail = if let Some(room) = selected_room {
        Table::new(vec![Row::new(vec![Cell::from(Span::raw(
            room.name.clone(),
        ))])])
    } else {
        Table::new(vec![Row::new(vec![Cell::from(Span::raw(
            "No chat selected",
        ))])])
    }
    .block(
        Block::default()
            .borders(Borders::ALL)
            .style(Style::default().fg(Color::White))
            .title("Chat Rooms")
            .border_type(BorderType::Plain),
    )
    .widths(&[
        Constraint::Percentage(30),
        Constraint::Percentage(20),
        Constraint::Percentage(20),
        Constraint::Percentage(5),
        Constraint::Percentage(20),
    ]);

KeyCode::Char('t') => {
                    if active_menu_item as usize == MenuItem::ChatRooms as usize {
                        text_input_mode = !text_input_mode;
                        if text_input_mode {
                            // Set the TextArea focus when entering text input mode
                            textarea.set_focus(true);
                        } else {
                            // Clear focus when exiting text input mode
                            textarea.set_focus(false);
                        }
                    }
                }

                KeyCode::Enter => {
                    if text_input_mode {
                        // Handle text input (you can save the text to your chat history)
                        if let Some(input) = textarea.get_text() {
                            // Add the input to your chat history or handle it as needed
                            // Example: chat_history.push(input);
                            // Clear the input field
                            textarea.clear();
                        }
                    }
                }

                KeyCode::Esc => {
                    // Exit text input mode when pressing Esc
                    text_input_mode = false;
                    textarea.set_focus(false);
                }
